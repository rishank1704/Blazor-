@page "/register"
@using EventEase.Models
@using Microsoft.AspNetCore.Components.Forms
@using EventEase.Services
@inject EventService EventService

<h3>Register for an Event</h3>

<EditForm Model="registration" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Name">Name</label>
        <InputText id="Name" class="form-control" @bind-Value="registration.Name" />
        <ValidationMessage For="@(() => registration.Name)" />
    </div>

    <div class="form-group">
        <label for="Email">Email</label>
        <InputText id="Email" class="form-control" @bind-Value="registration.Email" />
        <ValidationMessage For="@(() => registration.Email)" />
    </div>

    <div class="form-group">
        <label for="EventId">Select Event</label>
        <InputSelect id="EventId" class="form-control" @bind-Value="registration.EventId">
            @foreach (var ev in events)
            {
                <option value="@ev.Id">@ev.Name</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => registration.EventId)" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private Registration registration = new Registration();
    private List<Event> events;

    protected override async Task OnInitializedAsync()
    {
        // Fetch events from your service
        events = await EventService.GetEventsAsync();
    }

    private void HandleValidSubmit()
    {
        // Handle registration logic, save data, etc.
        Console.WriteLine($"User {registration.Name} registered for event ID: {registration.EventId}");
    }

    public class Registration
    {
        public string Name { get; set; }
        public string Email { get; set; }
        public int EventId { get; set; }
    }
}
